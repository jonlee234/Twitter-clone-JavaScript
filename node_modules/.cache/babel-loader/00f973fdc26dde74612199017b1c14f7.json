{"ast":null,"code":"var _jsxFileName = \"/Users/joseguevara/kwitter/kwitter_jackinthebox/src/components/login-form/LoginForm.js\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actions } from \"../../redux/actions/auth\";\nimport { getMessages } from '../../redux/actions/messages';\nimport { Loader } from \"../loader\";\nimport \"./LoginForm.css\";\nexport const LoginForm = ({\n  login\n}) => {\n  const {\n    loading,\n    error\n  } = useSelector(state => ({\n    loading: state.auth.loading,\n    error: state.auth.error\n  }));\n  const messages = useSelector(state => state.messages);\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const handleLogin = event => {\n    event.preventDefault();\n    dispatch(actions.login(state));\n  };\n\n  const handleChange = event => {\n    const inputName = event.target.name;\n    const inputValue = event.target.value;\n    setState(prevState => ({ ...prevState,\n      [inputName]: inputValue\n    }));\n  };\n\n  const test = event => {\n    console.log(messages.messages);\n    dispatch(getMessages());\n  }; // console.log(messages)\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"login-form\",\n    onSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    value: state.username,\n    autoFocus: true,\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: state.password,\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Test Button\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, error.message));\n};","map":{"version":3,"sources":["/Users/joseguevara/kwitter/kwitter_jackinthebox/src/components/login-form/LoginForm.js"],"names":["React","useState","useSelector","useDispatch","actions","getMessages","Loader","LoginForm","login","loading","error","state","auth","messages","dispatch","setState","username","password","handleLogin","event","preventDefault","handleChange","inputName","target","name","inputValue","value","prevState","test","console","log","color","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actions } from \"../../redux/actions/auth\";\nimport {getMessages} from '../../redux/actions/messages'\nimport { Loader } from \"../loader\";\nimport \"./LoginForm.css\";\n\nexport const LoginForm = ({ login }) => {\n  const { loading, error } = useSelector((state) => ({\n    loading: state.auth.loading,\n    error: state.auth.error,\n  }));\n  const messages = useSelector(state => state.messages)\n\n  const dispatch = useDispatch();\n\n  const [state, setState] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const handleLogin = (event) => {\n    event.preventDefault();\n    dispatch(actions.login(state));\n  };\n\n  const handleChange = (event) => {\n    const inputName = event.target.name;\n    const inputValue = event.target.value;\n    setState((prevState) => ({ ...prevState, [inputName]: inputValue }));\n  };\n  const test = event => {\n    console.log(messages.messages)\n    dispatch(getMessages())\n  }\n  // console.log(messages)\n  return (\n    <React.Fragment>\n      <form id=\"login-form\" onSubmit={handleLogin}>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={state.username}\n          autoFocus\n          required\n          onChange={handleChange}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={state.password}\n          required\n          onChange={handleChange}\n        />\n        <button type=\"submit\" disabled={loading}>\n          Login\n        </button>\n        <button onClick={test}>Test Button</button>\n      </form>\n      <ul>\n        {}\n      </ul>\n      {loading && <Loader />}\n      {error && <p style={{ color: \"red\" }}>{error.message}</p>}\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}