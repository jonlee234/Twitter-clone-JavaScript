{"ast":null,"code":"var _jsxFileName = \"/Users/joseguevara/kwitter/kwitter_jackinthebox/src/components/login-form/LoginForm.js\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actions } from \"../../redux/actions/auth\";\nimport { getMessages, resetMessages } from '../../redux/actions/messages';\nimport { Loader } from \"../loader\";\nimport \"./LoginForm.css\"; ///Creates this component to test whether my code was working properly you can delete it if working properly\n\nconst Test = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, props.username), /*#__PURE__*/React.createElement(\"p\", {\n    key: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, \" Post :: \", props.text), /*#__PURE__*/React.createElement(\"p\", {\n    key: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 3\n    }\n  }, \"posted on : \", props.time), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }\n  }, \"Likes : \", props.like.length), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport const LoginForm = ({\n  login\n}) => {\n  const {\n    loading,\n    error\n  } = useSelector(state => ({\n    loading: state.auth.loading,\n    error: state.auth.error\n  }));\n  const messages = useSelector(state => state.messages);\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const handleLogin = event => {\n    event.preventDefault();\n    dispatch(actions.login(state));\n  };\n\n  const handleChange = event => {\n    const inputName = event.target.name;\n    const inputValue = event.target.value;\n    setState(prevState => ({ ...prevState,\n      [inputName]: inputValue\n    }));\n  }; //TEST FUNCTIONS!!!\n\n\n  const test = event => {\n    dispatch(getMessages());\n  };\n\n  const test2 = event => {\n    dispatch(resetMessages());\n  };\n\n  console.log(messages.messages[0]); //TEST FUNCTIONS ^\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"login-form\",\n    onSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    value: state.username,\n    autoFocus: true,\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: state.password,\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Login\")), loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, error.message), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Test Button\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: test2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"RESET TEST\"), messages.messages[0] && messages.messages[0].map(item => /*#__PURE__*/React.createElement(Test, {\n    text: item.text,\n    key: item.id,\n    username: item.username,\n    time: item.createdAt,\n    like: item.likes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/joseguevara/kwitter/kwitter_jackinthebox/src/components/login-form/LoginForm.js"],"names":["React","useState","useSelector","useDispatch","actions","getMessages","resetMessages","Loader","Test","props","username","id","text","time","like","length","LoginForm","login","loading","error","state","auth","messages","dispatch","setState","password","handleLogin","event","preventDefault","handleChange","inputName","target","name","inputValue","value","prevState","test","test2","console","log","color","message","map","item","createdAt","likes"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actions } from \"../../redux/actions/auth\";\nimport {getMessages,resetMessages} from '../../redux/actions/messages'\nimport { Loader } from \"../loader\";\nimport \"./LoginForm.css\";\n\n///Creates this component to test whether my code was working properly you can delete it if working properly\nconst Test = (props) => {\n  return (\n    <div>\n    <h3>{props.username}</h3>\n    <p key={props.id}> Post :: {props.text}</p>\n  <p key={props.id}>posted on : {props.time}</p>\n  <p>Likes : {props.like.length}</p>\n    <br/>\n    </div>\n  )\n}\n\n\n\n\nexport const LoginForm = ({ login }) => {\n  const { loading, error } = useSelector((state) => ({\n    loading: state.auth.loading,\n    error: state.auth.error,\n  }));\n  const messages = useSelector(state => state.messages)\n\n  const dispatch = useDispatch();\n\n  const [state, setState] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const handleLogin = (event) => {\n    event.preventDefault();\n    dispatch(actions.login(state));\n  };\n\n  const handleChange = (event) => {\n    const inputName = event.target.name;\n    const inputValue = event.target.value;\n    setState((prevState) => ({ ...prevState, [inputName]: inputValue }));\n  };\n\n  //TEST FUNCTIONS!!!\n  const test = event => {\n    dispatch(getMessages())\n  }\n  const test2 = event => {\n    dispatch(resetMessages())\n  }\n  console.log(messages.messages[0])\n  //TEST FUNCTIONS ^\n\n\n  return (\n    <React.Fragment>\n      <form id=\"login-form\" onSubmit={handleLogin}>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={state.username}\n          autoFocus\n          required\n          onChange={handleChange}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={state.password}\n          required\n          onChange={handleChange}\n        />\n        <button type=\"submit\" disabled={loading}>\n          Login\n        </button>\n      </form>\n      {loading && <Loader />}\n      {error && <p style={{ color: \"red\" }}>{error.message}</p>}\n\n      {/* Was Testing on how whether my code worked so I did a button that runs the fetch and then displays it :: You can delete it as it appears to be retreiving the data properly */}\n      <button onClick={test}>Test Button</button>\n      <button onClick={test2}>RESET TEST</button>\n      {messages.messages[0] && messages.messages[0].map(item => (\n        <Test text={item.text} key={item.id} username={item.username} time={item.createdAt} like={item.likes}/>\n      ))}\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}