{"ast":null,"code":"var _jsxFileName = \"/Users/dawitmac/kenzie/assessment/kwitter_jackinthebox/src/components/signup-form/SignupForm.js\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actions } from \"../../redux/actions/signup\";\nimport { Loader } from \"../loader\";\nimport \"./SignupForm.css\";\nexport const SignupForm = ({\n  signup\n}) => {\n  const {\n    loading,\n    error\n  } = useSelector(state => ({\n    loading: state.loading,\n    error: state.error\n  }));\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    username: \"\",\n    password: \"\",\n    displayName: \"\",\n    message: \"\"\n  });\n\n  const handleSignup = event => {\n    event.preventDefault(); // dispatch(actions.createUser(state));\n\n    if (dispatch(actions.createUser(state))) {\n      setState(prevState => ({ ...prevState,\n        message: \"registration successful, please login\"\n      }));\n    }\n  };\n\n  const handleChange = event => {\n    const inputName = event.target.name;\n    const inputValue = event.target.value;\n    setState(prevState => ({ ...prevState,\n      [inputName]: inputValue\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"login-form\",\n    onSubmit: handleSignup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    value: state.username,\n    autoFocus: true,\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: state.password,\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"displayname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }, \"Display name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"displayName\",\n    value: state.displayName,\n    autoFocus: true,\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Sign Up\")), state.message ? state.message : null, loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, error.message));\n};","map":{"version":3,"sources":["/Users/dawitmac/kenzie/assessment/kwitter_jackinthebox/src/components/signup-form/SignupForm.js"],"names":["React","useState","useSelector","useDispatch","actions","Loader","SignupForm","signup","loading","error","state","dispatch","setState","username","password","displayName","message","handleSignup","event","preventDefault","createUser","prevState","handleChange","inputName","target","name","inputValue","value","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actions } from \"../../redux/actions/signup\";\nimport { Loader } from \"../loader\";\nimport \"./SignupForm.css\";\n\nexport const SignupForm = ({ signup }) => {\n  const { loading, error } = useSelector((state) => ({\n    loading: state.loading,\n    error: state.error,\n  }));\n\n  const dispatch = useDispatch();\n\n  const [state, setState] = useState({\n    username: \"\",\n    password: \"\",\n    displayName: \"\",\n    message: \"\",\n  });\n\n  const handleSignup = (event) => {\n    event.preventDefault();\n    // dispatch(actions.createUser(state));\n    if(dispatch(actions.createUser(state))){\n      setState((prevState) => ({ ...prevState, message: \"registration successful, please login\"}));\n    }\n  };\n\n  const handleChange = (event) => {\n    const inputName = event.target.name;\n    const inputValue = event.target.value;\n    setState((prevState) => ({ ...prevState, [inputName]: inputValue }));\n  };\n\n  return (\n    <React.Fragment>\n      <form id=\"login-form\" onSubmit={handleSignup}>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={state.username}\n          autoFocus\n          required\n          onChange={handleChange}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={state.password}\n          required\n          onChange={handleChange}\n        />\n         <label htmlFor=\"displayname\">Display name</label>\n        <input\n          type=\"text\"\n          name=\"displayName\"\n          value={state.displayName}\n          autoFocus\n          required\n          onChange={handleChange}\n        />\n        <button type=\"submit\" disabled={loading}>\n          Sign Up\n        </button>\n      </form>\n      {state.message ? state.message:null}\n      {loading && <Loader />}\n      {error && <p style={{ color: \"red\" }}>{error.message}</p>}\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}