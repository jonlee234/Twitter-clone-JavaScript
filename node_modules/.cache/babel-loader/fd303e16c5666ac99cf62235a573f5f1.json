{"ast":null,"code":"import { LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT } from \"../actions\"; // INITIAL STATE\n\nconst INITIAL_STATE = {\n  isAuthenticated: \"\",\n  username: \"\",\n  loading: false,\n  error: \"\"\n};\nexport const authReducer = (state = { ...INITIAL_STATE\n}, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return { ...INITIAL_STATE,\n        loading: true\n      };\n\n    case LOGIN_SUCCESS:\n      const {\n        username,\n        token\n      } = action.payload;\n      return { ...INITIAL_STATE,\n        isAuthenticated: token,\n        username,\n        loading: false\n      };\n\n    case LOGIN_FAILURE:\n      return { ...INITIAL_STATE,\n        error: action.payload,\n        loading: false\n      };\n\n    case LOGOUT:\n      return { ...INITIAL_STATE\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/dawitmac/kenzie/assessment/kwitter_jackinthebox/src/redux/reducers/auth.js"],"names":["LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","INITIAL_STATE","isAuthenticated","username","loading","error","authReducer","state","action","type","token","payload"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,aAAhB,EAA+BC,aAA/B,EAA8CC,MAA9C,QAA4D,YAA5D,C,CAEA;;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,eAAe,EAAE,EADG;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,OAAO,EAAE,KAHW;AAIpBC,EAAAA,KAAK,EAAE;AAJa,CAAtB;AAOA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG,EAAE,GAAGN;AAAL,CAAT,EAA+BO,MAA/B,KAA0C;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,KAAL;AACE,aAAO,EACL,GAAGI,aADE;AAELG,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKN,aAAL;AACE,YAAM;AAAEK,QAAAA,QAAF;AAAYO,QAAAA;AAAZ,UAAsBF,MAAM,CAACG,OAAnC;AACA,aAAO,EACL,GAAGV,aADE;AAELC,QAAAA,eAAe,EAAEQ,KAFZ;AAGLP,QAAAA,QAHK;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKL,aAAL;AACE,aAAO,EACL,GAAGE,aADE;AAELI,QAAAA,KAAK,EAAEG,MAAM,CAACG,OAFT;AAGLP,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKJ,MAAL;AACE,aAAO,EACL,GAAGC;AADE,OAAP;;AAGF;AACE,aAAOM,KAAP;AAzBJ;AA2BD,CA5BM","sourcesContent":["import { LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT } from \"../actions\";\n\n// INITIAL STATE\nconst INITIAL_STATE = {\n  isAuthenticated: \"\",\n  username: \"\",\n  loading: false,\n  error: \"\",\n};\n\nexport const authReducer = (state = { ...INITIAL_STATE }, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...INITIAL_STATE,\n        loading: true,\n      };\n    case LOGIN_SUCCESS:\n      const { username, token } = action.payload;\n      return {\n        ...INITIAL_STATE,\n        isAuthenticated: token,\n        username,\n        loading: false,\n      };\n    case LOGIN_FAILURE:\n      return {\n        ...INITIAL_STATE,\n        error: action.payload,\n        loading: false,\n      };\n    case LOGOUT:\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}