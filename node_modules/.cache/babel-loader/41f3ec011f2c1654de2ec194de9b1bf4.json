{"ast":null,"code":"var _jsxFileName = \"/Users/dawitmac/kenzie/assessment/kwitter_jackinthebox/src/components/userNamePicture/UserNamePicture.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { Component, useState } from \"react\";\nimport { postImage } from \"../../redux/actions/postImage\";\nimport { useSelector, useDispatch } from \"react-redux\"; //HandleSubmit\n//HandleOnChange\n//CheckImageSize image.size if statement >2000 alert too big<\n//CheckImageType if statement image.type  !== \"image/png\" && return png jpg gif\n\nconst UserNamePicture = () => {\n  const [image, setImage] = useState({\n    image: null\n  });\n  const userName = useSelector(state => state.auth.username);\n  console.log(img);\n\n  const onFileChange = e => {\n    e.preventDefault();\n    setImage(e.target.files); // useDispatch ImageUpload\n    // console.log(this.state)\n  };\n\n  const checkImageType = e => {\n    const fileArr = e.target.files[0];\n\n    if (image.type !== \"image/png\" && image.type !== \"image/jpeg\" && image.type !== \"image/gif\") {\n      alert(\"Wrong file type\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const checkImageSize = e => {\n    const fileArr = e.target.files[0];\n\n    if (image.size > 200000) {\n      alert(\"Need to be below 200 Kilobyte\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const onChangeFile = e => {\n    e.preventDefault();\n    console.log(e.target.picture);\n    const fileArr = new FormData(e.target);\n    postImage(fileArr);\n  };\n\n  console.log(image);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"usePicturer\",\n    onSubmit: e => onChangeFile(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\nexport default UserNamePicture;","map":{"version":3,"sources":["/Users/dawitmac/kenzie/assessment/kwitter_jackinthebox/src/components/userNamePicture/UserNamePicture.js"],"names":["React","render","Component","useState","postImage","useSelector","useDispatch","UserNamePicture","image","setImage","userName","state","auth","username","console","log","img","onFileChange","e","preventDefault","target","files","checkImageType","fileArr","type","alert","checkImageSize","size","onChangeFile","picture","FormData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,SAAR,QAAwB,+BAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAE,MAAM;AACzB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC;AAACK,IAAAA,KAAK,EAAC;AAAP,GAAD,CAAjC;AACA,QAAME,QAAQ,GAAGL,WAAW,CAAEM,KAAK,IAAEA,KAAK,CAACC,IAAN,CAAWC,QAApB,CAA5B;AACIC,EAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;;AAEJ,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,QAAQ,CAAES,CAAC,CAACE,MAAF,CAASC,KAAX,CAAR,CAFwB,CAGxB;AACA;AACD,GALH;;AAMA,QAAMC,cAAc,GAAIJ,CAAD,IAAO;AAC1B,UAAMK,OAAO,GAAGL,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAhB;;AACA,QACIb,KAAK,CAACgB,IAAN,KAAc,WAAd,IACAhB,KAAK,CAACgB,IAAN,KAAc,YADd,IAEAhB,KAAK,CAACgB,IAAN,KAAc,WAHlB,EAKI;AAAEC,MAAAA,KAAK,CAAE,iBAAF,CAAL;AACF,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GAXD;;AAYA,QAAMC,cAAc,GAAIR,CAAD,IAAO;AAC1B,UAAMK,OAAO,GAAGL,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAhB;;AACA,QACIb,KAAK,CAACmB,IAAN,GAAa,MADjB,EAGI;AAAEF,MAAAA,KAAK,CAAE,+BAAF,CAAL;AACF,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GATD;;AAUA,QAAMG,YAAY,GAAIV,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYG,CAAC,CAACE,MAAF,CAASS,OAArB;AACA,UAAMN,OAAO,GAAE,IAAIO,QAAJ,CAAaZ,CAAC,CAACE,MAAf,CAAf;AAEAhB,IAAAA,SAAS,CAACmB,OAAD,CAAT;AACC,GANL;;AASCT,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACG,sBACA,uDACA;AAAM,IAAA,EAAE,EAAE,aAAV;AAAwB,IAAA,QAAQ,EAAIU,CAAD,IAAKU,YAAY,CAACV,CAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAO,IAAA,IAAI,EAAE,MAAb;AAAoB,IAAA,IAAI,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAIA;AAAS,IAAA,IAAI,EAAE,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,CADA,CADA;AAaC,CAxDT;;AAyDA,eAAeX,eAAf","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Component, useState } from \"react\"\nimport {postImage} from \"../../redux/actions/postImage\"\nimport { useSelector, useDispatch } from \"react-redux\";\n\n//HandleSubmit\n//HandleOnChange\n//CheckImageSize image.size if statement >2000 alert too big<\n//CheckImageType if statement image.type  !== \"image/png\" && return png jpg gif\n\nconst UserNamePicture =()=>  {\n    const [image,setImage] = useState({image:null})\n    const userName = useSelector (state=>state.auth.username)\n        console.log(img)\n\n    const onFileChange = (e) => {\n        e.preventDefault()\n        setImage( e.target.files)\n        // useDispatch ImageUpload\n        // console.log(this.state)\n      }\n    const checkImageType = (e) => {\n        const fileArr = e.target.files[0]\n        if (\n            image.type!== \"image/png\" && \n            image.type!== \"image/jpeg\" && \n            image.type!== \"image/gif\" \n            ) \n            { alert (\"Wrong file type\")\n            return false\n        }\n        return true\n    }\n    const checkImageSize = (e) => {\n        const fileArr = e.target.files[0]\n        if (\n            image.size > 200000  \n            ) \n            { alert (\"Need to be below 200 Kilobyte\")\n            return false\n        }\n        return true\n    }\n    const onChangeFile = (e) => {\n        e.preventDefault()\n        console.log(e.target.picture)\n        const fileArr= new FormData(e.target)\n\n        postImage(fileArr) \n        }\n        \n       \n     console.log(image)\n        return ( \n        <>\n        <form id =\"usePicturer\" onSubmit= {(e)=>onChangeFile(e)}>\n        {/*  onSubmit ={onFileChange}>  */}\n        <input type= \"file\" name=\"picture\"/>\n        {/* onChange= {onChangeFile}></input> */}\n        <button  type =\"submit\">Submit</button> \n        {/*  image tag apiUrl this.props?? this api url: default img */}\n        </form>\n        </>\n        )\n        \n\n        }\nexport default UserNamePicture "]},"metadata":{},"sourceType":"module"}